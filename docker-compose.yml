version: '3.9'

services: 
    client:
        container_name: user-client
        image: user-client
        build: 
            context: client
        depends_on: 
            - server
        volumes: 
            - ./client:/app/client
            - /app/client/node_modules
        ports: 
            - "3001:3000"
        environment:
            - CHOKIDAR_USEPOLLING=true

    server:
        container_name: user-server
        image: user-server
        build: 
            context: server
        depends_on:
            - db
            - minio
        volumes: 
            - ./server/flaskkr:/app/server/flaskkr
            - ./server/db.yaml:/app/server/db.yaml
            - ./wait-for:/wait-for
        ports:
            - "5000:5000"
        environment: 
            FLASK_ENV: development
        command: sh -c "sleep 10s&&flask run"

    local-nginx:
        container_name: local-nginx
        image: local-nginx
        build: 
            context: local-nginx
        ports:
            - "80:80"
        volumes:
            - ./local-nginx/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - server
            - client
        restart: unless-stopped
        command: "supervisord -n"

    db:
        container_name: user-database
        image: mysql:8.0
        volumes: 
            - ./server/mysql-init-scripts:/docker-entrypoint-initdb.d
            - ./mysqldata:/var/lib/mysql
        cap_add:
            - SYS_NICE
        ports: 
            - "3306:3306"
        environment: 
            - MYSQL_ROOT_PASSWORD=password
            - MYSQL_DATABASE=user_info

    minio:
        image: minio/minio
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - minio_storage:/data
        environment:
            MINIO_ROOT_USER: s3_user
            MINIO_ROOT_PASSWORD: qwe90qwe
        command: server --console-address ":9001" /data

    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.0
        hostname: zookeeper
        container_name: user-zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_SERVER_ID: 1
            ZOOKEEPER_SERVERS: zookeeper:2888:3888

    kafka:
        image: confluentinc/cp-kafka:7.3.0
        hostname: kafka
        container_name: user-kafka
        ports:
            - "9092:9092"
            - "29092:29092"
            - "9999:9999"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_BROKER_ID: 1
            KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_JMX_PORT: 9999
            KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
            KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
            KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
        depends_on:
            - zookeeper

volumes:
  minio_storage: {}
